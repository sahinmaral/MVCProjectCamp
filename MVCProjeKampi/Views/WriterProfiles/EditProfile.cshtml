@model EntityLayer.Concrete.User
@{
    ViewBag.Title = "Bilgilerini düzenle";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}
<h3 class="h3">Profilinizi Düzenleyin</h3>
<br />
@using (Html.BeginForm("EditProfile", "WriterProfiles", FormMethod.Post))
{
    <div class="form-group">
        @Html.HiddenFor(x=>x.UserId)

        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.UserFirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserFirstName, "", new { @class = "text-danger", @style = "font-weight: bold" })
        <br /><br />
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.UserLastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserLastName, "", new { @class = "text-danger", @style = "font-weight: bold" })
        <br /><br />
        @Html.Label("Yazar Görsel Linki")
        @Html.TextBoxFor(x => x.UserImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserImage, "", new { @class = "text-danger", @style = "font-weight: bold" })
        <br /><br />
        @Html.Label("Yazar Ünvanı")
        @Html.TextBoxFor(x => x.UserTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserTitle, "", new { @class = "text-danger", @style = "font-weight: bold" })
        <br /><br />
        @Html.Label("Yazar Hakkında")
        @Html.TextAreaFor(x => x.UserAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.UserAbout, "", new { @class = "text-danger", @style = "font-weight: bold" })
        <br /><br />
        <button class="btn btn-success">Değişiklikleri uygula</button>

    </div>
}

